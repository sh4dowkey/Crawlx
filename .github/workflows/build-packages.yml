name: Build Release Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
        type: string

env:
  GO_VERSION: '1.22'
  BINARY_NAME: 'crawlx'

jobs:
  build-packages:
    name: Build Release Packages
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test ./...

    - name: Create dist directory
      run: mkdir -p dist

    - name: Build Windows binary
      env:
        GOOS: windows
        GOARCH: amd64
        CGO_ENABLED: 0
      run: |
        echo "Building Windows binary..."
        go build -ldflags="-w -s" -o dist/crawlx.exe ./cmd/crawlx

    - name: Build Linux binary
      env:
        GOOS: linux
        GOARCH: amd64
        CGO_ENABLED: 0
      run: |
        echo "Building Linux binary..."
        go build -ldflags="-w -s" -o dist/crawlx ./cmd/crawlx

    - name: Create Windows package
      run: |
        echo "Creating Windows package..."
        mkdir -p packages/crawlx-windows/dist
        mkdir -p packages/crawlx-windows/scripts
        
        cp dist/crawlx.exe packages/crawlx-windows/dist/
        cp scripts/setup.ps1 packages/crawlx-windows/scripts/
        
        cat > packages/crawlx-windows/README.txt << 'EOF'
        CrawlX Windows Installation
        ===========================
        
        Quick Install:
        1. Right-click PowerShell and select "Run as Administrator"
        2. Navigate to this folder
        3. Run: .\scripts\setup.ps1
        4. Try: crawlx --help
        
        Manual Install:
        Copy dist\crawlx.exe to a folder in your PATH
        
        Uninstall:
        .\scripts\setup.ps1 -Uninstall
        EOF

    - name: Create Linux package
      run: |
        echo "Creating Linux package..."
        mkdir -p packages/crawlx-linux/dist
        mkdir -p packages/crawlx-linux/scripts
        
        cp dist/crawlx packages/crawlx-linux/dist/
        cp scripts/setup.sh packages/crawlx-linux/scripts/
        chmod +x packages/crawlx-linux/scripts/setup.sh
        
        cat > packages/crawlx-linux/README.txt << 'EOF'
        CrawlX Linux Installation
        =========================
        
        Quick Install:
        1. Make executable: chmod +x ./scripts/setup.sh
        2. Run: sudo ./scripts/setup.sh
        3. Try: crawlx --help
        
        Manual Install:
        sudo cp dist/crawlx /usr/local/bin/
        sudo chmod +x /usr/local/bin/crawlx
        
        Uninstall:
        sudo ./scripts/setup.sh uninstall
        EOF

    - name: Create packages
      run: |
        cd packages
        zip -r crawlx-windows-${{ github.event.inputs.version }}.zip crawlx-windows/
        tar -czf crawlx-linux-${{ github.event.inputs.version }}.tar.gz crawlx-linux/
        
        echo "Packages created:"
        ls -la *.zip *.tar.gz

    - name: Upload Windows package
      uses: actions/upload-artifact@v3
      with:
        name: crawlx-windows-${{ github.event.inputs.version }}
        path: packages/crawlx-windows-${{ github.event.inputs.version }}.zip

    - name: Upload Linux package
      uses: actions/upload-artifact@v3
      with:
        name: crawlx-linux-${{ github.event.inputs.version }}
        path: packages/crawlx-linux-${{ github.event.inputs.version }}.tar.gz

    - name: Show instructions
      run: |
        echo "âœ… BUILD COMPLETED!"
        echo ""
        echo "ðŸ“¦ Packages created:"
        echo "  â€¢ crawlx-windows-${{ github.event.inputs.version }}.zip"  
        echo "  â€¢ crawlx-linux-${{ github.event.inputs.version }}.tar.gz"
        echo ""
        echo "ðŸ“¥ TO DOWNLOAD:"
        echo "  1. Go to Actions tab"
        echo "  2. Click this workflow run"  
        echo "  3. Download from Artifacts section"
        echo ""
        echo "ðŸš€ TO RELEASE:"
        echo "  1. Create GitHub Release"
        echo "  2. Upload both packages" 
        echo "  3. Publish!"