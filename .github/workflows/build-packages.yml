name: Build Release Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
        type: string

env:
  GO_VERSION: '1.22'
  BINARY_NAME: 'crawlx'

jobs:
  build-packages:
    name: Build Release Packages
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test ./...

    - name: Create dist directory
      run: mkdir -p dist

    # Windows Build
    - name: Build Windows binary
      env:
        GOOS: windows
        GOARCH: amd64
        CGO_ENABLED: 0
      run: |
        echo "Building Windows binary..."
        go build -ldflags="-w -s" -o dist/crawlx.exe ./cmd/crawlx

    # Linux Build
    - name: Build Linux binary
      env:
        GOOS: linux
        GOARCH: amd64
        CGO_ENABLED: 0
      run: |
        echo "Building Linux binary..."
        go build -ldflags="-w -s" -o dist/crawlx ./cmd/crawlx

    # macOS Build
    - name: Build macOS binary
      env:
        GOOS: darwin
        GOARCH: amd64
        CGO_ENABLED: 0
      run: |
        echo "Building macOS binary..."
        go build -ldflags="-w -s" -o dist/crawlx ./cmd/crawlx

    # ----------------- PACKAGE WINDOWS -----------------
    - name: Create Windows package
      run: |
        echo "Creating Windows package..."
        mkdir -p windows-package/dist
        mkdir -p windows-package/scripts
        
        cp dist/crawlx.exe windows-package/dist/
        cp scripts/setup.ps1 windows-package/scripts/
        
        cat > windows-package/README.txt << 'EOF'
        CrawlX Windows Installation
        ===========================
        
        Quick Install:
        1. Right-click PowerShell and select "Run as Administrator"
        2. Navigate to this folder
        3. Run: .\scripts\setup.ps1
        4. Try: crawlx --help
        
        Manual Install:
        Copy dist\crawlx.exe to a folder in your PATH
        
        Uninstall:
        .\scripts\setup.ps1 -Uninstall
        EOF

    # ----------------- PACKAGE LINUX -----------------
    - name: Create Linux package
      run: |
        echo "Creating Linux package..."
        mkdir -p linux-package/dist
        mkdir -p linux-package/scripts
        
        cp dist/crawlx linux-package/dist/
        cp scripts/setup.sh linux-package/scripts/
        chmod +x linux-package/scripts/setup.sh
        
        cat > linux-package/README.txt << 'EOF'
        CrawlX Linux Installation
        =========================
        
        Quick Install:
        1. Make executable: chmod +x ./scripts/setup.sh
        2. Run: sudo ./scripts/setup.sh
        3. Try: crawlx --help
        
        Manual Install:
        sudo cp dist/crawlx /usr/local/bin/
        sudo chmod +x /usr/local/bin/crawlx
        
        Uninstall:
        sudo ./scripts/setup.sh uninstall
        EOF

    - name: Compress Linux package to tar.gz
      run: |
        tar -czvf crawlx-linux-${{ github.event.inputs.version }}.tar.gz -C linux-package .

    # ----------------- PACKAGE MACOS -----------------
    - name: Create macOS package
      run: |
        echo "Creating macOS package..."
        mkdir -p mac-package/dist
        mkdir -p mac-package/scripts
        
        cp dist/crawlx mac-package/dist/
        cp scripts/setup.sh mac-package/scripts/
        chmod +x mac-package/scripts/setup.sh
        
        cat > mac-package/README.txt << 'EOF'
        CrawlX macOS Installation
        =========================
        
        Quick Install:
        1. Make executable: chmod +x ./scripts/setup.sh
        2. Run: sudo ./scripts/setup.sh
        3. Try: crawlx --help
        
        Manual Install:
        sudo cp dist/crawlx /usr/local/bin/
        sudo chmod +x /usr/local/bin/crawlx
        
        Uninstall:
        sudo ./scripts/setup.sh uninstall
        EOF

    # ----------------- UPLOAD ARTIFACTS -----------------
    - name: Upload Windows package
      uses: actions/upload-artifact@v4
      with:
        name: crawlx-windows-${{ github.event.inputs.version }}
        path: windows-package/

    - name: Upload Linux package
      uses: actions/upload-artifact@v4
      with:
        name: crawlx-linux-${{ github.event.inputs.version }}
        path: crawlx-linux-${{ github.event.inputs.version }}.tar.gz

    - name: Upload macOS package
      uses: actions/upload-artifact@v4
      with:
        name: crawlx-macos-${{ github.event.inputs.version }}
        path: mac-package/

    # ----------------- SHOW INSTRUCTIONS -----------------
    - name: Show instructions
      run: |
        echo "✅ BUILD COMPLETED!"
        echo ""
        echo "📦 Packages ready for download:"
        echo "  • crawlx-windows-${{ github.event.inputs.version }}.zip"  
        echo "  • crawlx-linux-${{ github.event.inputs.version }}.tar.gz"
        echo "  • crawlx-macos-${{ github.event.inputs.version }}.zip"
        echo ""
        echo "📥 TO DOWNLOAD:"
        echo "  1. Go to Actions tab"
        echo "  2. Click this workflow run"  
        echo "  3. Download from Artifacts section"
        echo ""
        echo "🚀 TO RELEASE:"
        echo "  1. Create GitHub Release"
        echo "  2. Upload all 3 packages" 
        echo "  3. Publish!"
        echo ""
        echo "📁 Package contents:"
        echo "  ├── dist/ (binary)"
        echo "  ├── scripts/ (installer)"  
        echo "  └── README.txt (instructions)"
